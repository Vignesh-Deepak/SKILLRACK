
int main()
{
  int N;
  scanf("%d",&N);
  char str[101];
  for(int i=0;i<N;i++) // IF N AND STRING COMES FIRST ITERATION SHOULD BE TILL N AND SECOND CAN BE BASED ON STR[I]!='\0'
  {
    scanf("%c",str);
    int len= strlen(str);
    if(len%2!=0){
    printf("%c\n",str[len/2]);
    }
    else
    {
        printf("%c%c\n",str[len/2 -1],str[len/2]);  // IF EVEN COMES TWO MIDDLE CHARACTERS
    }
    
  }
}
method 2 functions 2 types
type 1
void character(*str) // void is used when nothing to be returned 
{ 
  
  for(int i=0;i<N;i++) 
  {
    scanf("%c",str);// comes in main or functions // when comes in functions are we have to create another simlar string for proceeding or not
    int len= strlen(str);
    if(len%2!=0){
    printf("%c\n",str[len/2]);
   
    }
    else
    { 
        
       printf("%c%c\n",str[len/2 -1],str[len/2]);  
    }
    
  }
  
}
int main()
{
 int N;
 scanf("%d",&N);
 char str[101];
 scanf("%s",str) or fgets(str,101,stdin);
 character(); // in functions we cannot pass more than one parameter  
 }
 type 2
char character(*str) // char is used when  to be returned 
{ 
  char b[3];// 2 even 1 odd
  for(int i=0;i<N;i++) 
  {
    scanf("%c",str);// comes in main or functions // when comes in functions are we have to create another simlar string for proceeding or not
    int len= strlen(str);
    if(len%2!=0){
    b[0]=str[len/2];
    return b[0];
   
    }
    else
    { 
       b[0]=str[len/2-1];
       b[1]=str[len/2]; 
       return b[0];  // return b is enough for both b element array
       return b[1];  
    }
    
  }
  
}
int main()
{
 char b[3];// doubt 
 int N;
 scanf("%d",&N);
 char str[101];
 scanf("%s",str) or fgets(str,101,stdin);
 character(b); // in functions we cannot pass more than one parameter  
 }
