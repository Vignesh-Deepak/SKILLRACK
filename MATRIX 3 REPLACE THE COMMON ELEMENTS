The program must accept a positive integer matrix of size NxN as the input.
The program must print the matrix by replacing the common elements in all the row by -1 as the output.
Boundary Condition(s): 3 <= N <= 50
1 <= Matrix element value <= 99 
Input Format: The first line contains the value of N. The next N lines contain N integers separated by space(s).
Output Format: The first N lines contain the matrix with the common elements replaced by -1. 
Example Input/Output 1: 
Input: 4
1 2 3 4
2 3 4 5
3 4 5 6 
4 5 6 7 
Output: 
1 2 3 -1
2 3 -1 5 
3 -1 5 6
-1 5 6 7
Example Input/Output 2:
Input: 3
3 1 2
1 2 3
2 3 1 
Output:
-1 -1 -1 
-1 -1 -1
-1 -1 -1


#include<stdio.h>
#include<stdlib.h>

int main()
{
    int N;
    int count[101]={0};
    scanf("%d",&N);
    int mat[N][N];
    for(int row=0;row<N;row++)
    {
        for(int col=0;col<N;col++)
        {
            scanf("%d",&mat[row][col]);
            if(count[mat[row][col]]==row)  // HINT -> 1. 1st row value is incremented , 2. if previous value at that row reappears in 2nd row, 2nd row =(equals to) value incremented  eg 2.   2 appears 2 times
                                          // important is only values in first row and that is previously available  & next row values reappears only , then the value changes 
            {
                count[mat[row][col]]++;
            }
            
            
        }
    }
    for(int row=0;row<N;row++)
    {
        for(int col=0;col<N;col++)
        {
            if(count[mat[row][col]]==N)
            {
                mat[row][col]=-1;
            }
            printf("%d",mat[row][col]);
        }
        printf("\n");
    }

}
